-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.bullets
(
    id         uuid NOT NULL            DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    user_id    uuid NOT NULL            DEFAULT auth.uid(),
    content    json,
    type       character varying COLLATE pg_catalog."default",
    CONSTRAINT bullets_pkey PRIMARY KEY (id),
    CONSTRAINT bullets_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.bullets
    OWNER to postgres;

ALTER TABLE IF EXISTS public.bullets
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.bullets TO anon;

GRANT ALL ON TABLE public.bullets TO authenticated;

GRANT ALL ON TABLE public.bullets TO postgres;

GRANT ALL ON TABLE public.bullets TO service_role;
CREATE POLICY "Users can select their bullets"
    ON public.bullets
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING ((auth.uid() = user_id));
CREATE POLICY "users can delete their own bullets"
    ON public.bullets
    AS PERMISSIVE
    FOR DELETE
    TO public
    USING ((auth.uid() = user_id));
CREATE POLICY "users can insert bullets only with their own user id"
    ON public.bullets
    AS PERMISSIVE
    FOR INSERT
    TO public
    WITH CHECK ((auth.uid() = user_id));
CREATE POLICY "users can update their own bullets"
    ON public.bullets
    AS PERMISSIVE
    FOR UPDATE
    TO public
    USING ((auth.uid() = user_id))
    WITH CHECK ((auth.uid() = user_id));

CREATE TRIGGER handle_updated_at
    BEFORE UPDATE
    ON public.bullets
    FOR EACH ROW
EXECUTE FUNCTION extensions.moddatetime('updated_at');
